;Программа 1_6
;вывод форматированного текста на экран с предварительной его очисткой
 
text	segment 'code'			; начало описания сегмента команд
	assume CS:text, DS:data		; начало инициализации сегментных регистров

begin:					; метка начала программы
	mov	ax,data			; загрузка адресса сегмента команд в регистр ds через ax. из ax в ds 
	mov	ds,ax			; ^
	mov	ah,02h			; загрузка номера функции вывода символа на экран
	mov	dl, '>'			; загрузка символа для вывода
	int	21h			; выполнение функции 02
	mov	ah,3fh			; загрузка номера функции, чтение данных с клавиатуры
	mov	bx,0			; установка минимального колличества символов
	mov	cx,128			; установка максимального колличества символов
	mov	dx,offset inbuf		; установка адресса переменной, куда будет записываться символ
	int	21h			; выполнение символа 3f 
	mov	ah,40h			; загрузка номера функции для вывода на стандартное устройство
	mov	bx,1			; загрузка номера устройства. 1-экран
	mov	cx,actlen		; колличество символов для вывода
	mov	dx,offset inbuf		; загрузка адресса переменной для вывода
	int	21h			; выполнение функции
	mov	ax,4c00h		; выход из программы
	int	21h			; выполнение функции выхода из программы
text ends				; конец описания сегмента команд
data	segment				; начало описания сегмента данных
	actlen dw 0			; переменная типа "ворд"
	inbuf db 128 dup ('*')		; массив из 128 символов для чтения данных с клавиатуры, заполненных *
data ends				; конец описания сегмента данных			
stk 	segment stack 'stack'		; начало описания сегмента стека
	dw 128 dup(0)			; выделение памяти 128 ячеек типа "ворд". все ячейки заполнены нулем
stk ends				; конец описания сегмента стека
	end begin			; указание метки конца программы

