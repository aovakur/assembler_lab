;Программа 1_7
;ввод символа с клавиатуры с обработки введенного символа
 
text	segment 'code'				; начало описания сегмента команд
	assume CS:text, DS:data			; начало инициализации сегментных регистров

begin:						; метка начала программы
	mov	ax,data				; загрузка адресса сегмента команд в регистр ds через ax. из ax в ds 
	mov	ds,ax				; ^
input:						; метка начала ввода символов
	mov	ah,09h				; загрузка номера функции вывода на экран
	mov	dx,offset promt			; загрузка адреса переменной для вывода на экран
	int	21h				; выполнение функции 09
	mov	ah,01h				; загрузка номера функции 01 чтения символа с клавиатуры
	int	21h				; выполнение функции 01
	cmp	al,'9'				; сравнение введенного симвла с 9
	ja	error				; переход на метку error, если больше, чем 9
	cmp	al,'0'				; сравнение введенного символа с 0
	jb	error				; переход на метку error, если меньше 0
	mov	si,18				; загрузка индекса для записи введенного символа
	mov	inbuf(ai),al			; запись введенного символа в переменную на заданную позицию
	mov	ah,40h				; установка номера функции для выода на стандартное устройство
	mov	bx,1				; загрузка номера устройства. 1-экран
	mov	cx,19				; загрузка колличества симвлов для вывода
	mov	dx, offset inbuf		; загрузка адресса переменной
	int	21h				; выполнение функции 40
	mov	ax,4c00h			; выход из программы
	int	21h				; выполнение функции выхода из программы
error:						; начало блока обработки ошибки
	mov	sh,09h				; вывод переменной message с помощью функции 09
	mov	dx,offset massage		; загрузка адресса переменной
	int	21h				; выполнение функции 09
	jmp	input				; переход на метку ввода символа
text ends					; конец описания сегмента команд
 
data	segment					; начало описания сегмента данных
	message	db 10,13,'Incorrect symbol$'	; собщение об ошибке
	pront	db 10,13,'Enter Symbol 0-9>$'	; запрос на ввод символа 0-9
	inbuf	db 10,13,'Entered symbol >*'	; куда будет записан введенный символ вместо *
data ends					; конец описания сегмента данных

stk	segment stack 'stak'			; начало описания сегмента стека
	dw 128 dup(0)				; выделение памяти 128 ячеек типа "ворд". все ячейки заполнены нулем
stk ends					; конец описания сегмента команд
	end begin				; метка указания конца программы

